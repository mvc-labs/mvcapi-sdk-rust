/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// TreasuryHistory : treasury transaction history



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TreasuryHistory {
    /// treasury transaction txid.
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    /// treasury transaction spent outcome in satoshi.
    #[serde(rename = "outcome", skip_serializing_if = "Option::is_none")]
    pub outcome: Option<i64>,
    /// treasury transaction timestamp.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
    /// Reason for treasury transaction.
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    /// Announcement link for treasury transaction.
    #[serde(rename = "announcementUrl", skip_serializing_if = "Option::is_none")]
    pub announcement_url: Option<String>,
}

impl TreasuryHistory {
    /// treasury transaction history
    pub fn new() -> TreasuryHistory {
        TreasuryHistory {
            txid: None,
            outcome: None,
            timestamp: None,
            reason: None,
            announcement_url: None,
        }
    }
}


