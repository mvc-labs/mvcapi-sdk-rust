/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// InvalidBroadCast : Invalid transactions detected during validation (if there are any)



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InvalidBroadCast {
    /// return txid if broadcast success
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    /// return messages if broadcast failed
    #[serde(rename = "reject_code", skip_serializing_if = "Option::is_none")]
    pub reject_code: Option<i32>,
    /// return messages if broadcast failed
    #[serde(rename = "reject_reason", skip_serializing_if = "Option::is_none")]
    pub reject_reason: Option<String>,
    /// return messages if broadcast failed
    #[serde(rename = "collideWith", skip_serializing_if = "Option::is_none")]
    pub collide_with: Option<Vec<crate::models::InvalidBroadcastCollide>>,
}

impl InvalidBroadCast {
    /// Invalid transactions detected during validation (if there are any)
    pub fn new() -> InvalidBroadCast {
        InvalidBroadCast {
            txid: None,
            reject_code: None,
            reject_reason: None,
            collide_with: None,
        }
    }
}


