/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// ContractNftSellV2Utxo : Contract nft sell v2 Utxo belongs to the specified address



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContractNftSellV2Utxo {
    /// Address string of this utxo
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// Address calculated from contract hash(p2ch).
    #[serde(rename = "contractAddress", skip_serializing_if = "Option::is_none")]
    pub contract_address: Option<String>,
    /// Txid for this utxo.
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    /// Output index for the Utxo.
    #[serde(rename = "txIndex", skip_serializing_if = "Option::is_none")]
    pub tx_index: Option<i32>,
    /// Codehash of this utxo.
    #[serde(rename = "codeHash", skip_serializing_if = "Option::is_none")]
    pub code_hash: Option<String>,
    /// Genesis of this utxo.
    #[serde(rename = "genesis", skip_serializing_if = "Option::is_none")]
    pub genesis: Option<String>,
    /// The index of this NFT.
    #[serde(rename = "tokenIndex", skip_serializing_if = "Option::is_none")]
    pub token_index: Option<i64>,
    /// the price of nft.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<i64>,
    /// The address to receive fees.
    #[serde(rename = "feeAddressPkh", skip_serializing_if = "Option::is_none")]
    pub fee_address_pkh: Option<String>,
    /// feeRate
    #[serde(rename = "feeRate", skip_serializing_if = "Option::is_none")]
    pub fee_rate: Option<i32>,
    /// nftId
    #[serde(rename = "nftId", skip_serializing_if = "Option::is_none")]
    pub nft_id: Option<String>,
    /// The address pkh of seller
    #[serde(rename = "sellerAddressPkh", skip_serializing_if = "Option::is_none")]
    pub seller_address_pkh: Option<String>,
    /// Mvc value of the utxo(Irrelavant to token value)
    #[serde(rename = "satoshi", skip_serializing_if = "Option::is_none")]
    pub satoshi: Option<i64>,
    /// Mvc value of the utxo(In string format)
    #[serde(rename = "satoshiString", skip_serializing_if = "Option::is_none")]
    pub satoshi_string: Option<String>,
    /// The height of this utxo, -1 for unconfirmed utxo.
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i64>,
    /// Is current nft transfered into sell contract, If not ready, the following fields will be null
    #[serde(rename = "isReady", skip_serializing_if = "Option::is_none")]
    pub is_ready: Option<bool>,
    /// SensibleId of the token
    #[serde(rename = "sensibleId", skip_serializing_if = "Option::is_none")]
    pub sensible_id: Option<String>,
    /// The metanet tx describing the nft.
    #[serde(rename = "metaTxid", skip_serializing_if = "Option::is_none")]
    pub meta_txid: Option<String>,
    /// Symbol of the token.
    #[serde(rename = "metaOutputIndex", skip_serializing_if = "Option::is_none")]
    pub meta_output_index: Option<i32>,
    /// The total supply of this NFT.
    #[serde(rename = "tokenSupply", skip_serializing_if = "Option::is_none")]
    pub token_supply: Option<i64>,
    /// Flag used for paging
    #[serde(rename = "flag", skip_serializing_if = "Option::is_none")]
    pub flag: Option<String>,
}

impl ContractNftSellV2Utxo {
    /// Contract nft sell v2 Utxo belongs to the specified address
    pub fn new() -> ContractNftSellV2Utxo {
        ContractNftSellV2Utxo {
            address: None,
            contract_address: None,
            txid: None,
            tx_index: None,
            code_hash: None,
            genesis: None,
            token_index: None,
            price: None,
            fee_address_pkh: None,
            fee_rate: None,
            nft_id: None,
            seller_address_pkh: None,
            satoshi: None,
            satoshi_string: None,
            height: None,
            is_ready: None,
            sensible_id: None,
            meta_txid: None,
            meta_output_index: None,
            token_supply: None,
            flag: None,
        }
    }
}


