/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// AsyncBroadcastResult : Broadcast result



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AsyncBroadcastResult {
    /// the txid of this tx
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    /// the state of this tx, possible values PENDING, BROADCASTED, INVALID, UNKNOWN
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// return messages if broadcast failed
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl AsyncBroadcastResult {
    /// Broadcast result
    pub fn new() -> AsyncBroadcastResult {
        AsyncBroadcastResult {
            txid: None,
            state: None,
            message: None,
        }
    }
}


