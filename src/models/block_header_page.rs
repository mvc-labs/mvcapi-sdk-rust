/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// BlockHeaderPage : block header saved by partition page



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BlockHeaderPage {
    /// Block height.
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i64>,
    /// Block hash.
    #[serde(rename = "blockHash", skip_serializing_if = "Option::is_none")]
    pub block_hash: Option<String>,
    /// Block timestamp.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
    /// current median time
    #[serde(rename = "medianTime", skip_serializing_if = "Option::is_none")]
    pub median_time: Option<i64>,
    /// Miner total rewards, including miner fee.
    #[serde(rename = "reward", skip_serializing_if = "Option::is_none")]
    pub reward: Option<i64>,
    /// Guessed miner name.
    #[serde(rename = "miner", skip_serializing_if = "Option::is_none")]
    pub miner: Option<String>,
    /// Total txs count included in the block.
    #[serde(rename = "txCount", skip_serializing_if = "Option::is_none")]
    pub tx_count: Option<i32>,
    /// Size of the block
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
}

impl BlockHeaderPage {
    /// block header saved by partition page
    pub fn new() -> BlockHeaderPage {
        BlockHeaderPage {
            height: None,
            block_hash: None,
            timestamp: None,
            median_time: None,
            reward: None,
            miner: None,
            tx_count: None,
            size: None,
        }
    }
}


