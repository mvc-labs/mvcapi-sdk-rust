/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// ContractFtBalance : Contract fungible token balance



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContractFtBalance {
    /// Codehash of the token.
    #[serde(rename = "codeHash", skip_serializing_if = "Option::is_none")]
    pub code_hash: Option<String>,
    /// Genesis of the token.
    #[serde(rename = "genesis", skip_serializing_if = "Option::is_none")]
    pub genesis: Option<String>,
    /// Name of the token.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Symbol of the token.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// The decimal position.
    #[serde(rename = "decimal", skip_serializing_if = "Option::is_none")]
    pub decimal: Option<i32>,
    /// SensibleId of the token
    #[serde(rename = "sensibleId", skip_serializing_if = "Option::is_none")]
    pub sensible_id: Option<String>,
    /// Number of utxos for this token.
    #[serde(rename = "utxoCount", skip_serializing_if = "Option::is_none")]
    pub utxo_count: Option<i32>,
    /// Confirmed balance of the token.
    #[serde(rename = "confirmed", skip_serializing_if = "Option::is_none")]
    pub confirmed: Option<i64>,
    /// Confirmed balance of the token(In string format).
    #[serde(rename = "confirmedString", skip_serializing_if = "Option::is_none")]
    pub confirmed_string: Option<String>,
    /// Unconfirmed balance of the token.
    #[serde(rename = "unconfirmed", skip_serializing_if = "Option::is_none")]
    pub unconfirmed: Option<i64>,
    /// Unconfirmed balance of the token(In string format).
    #[serde(rename = "unconfirmedString", skip_serializing_if = "Option::is_none")]
    pub unconfirmed_string: Option<String>,
}

impl ContractFtBalance {
    /// Contract fungible token balance
    pub fn new() -> ContractFtBalance {
        ContractFtBalance {
            code_hash: None,
            genesis: None,
            name: None,
            symbol: None,
            decimal: None,
            sensible_id: None,
            utxo_count: None,
            confirmed: None,
            confirmed_string: None,
            unconfirmed: None,
            unconfirmed_string: None,
        }
    }
}


