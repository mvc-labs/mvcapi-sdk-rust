/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// XpubAddress : Address detail in the wallet



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct XpubAddress {
    /// xpub in the query
    #[serde(rename = "xpub", skip_serializing_if = "Option::is_none")]
    pub xpub: Option<String>,
    /// Address in the query
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// Address type, 0 for receive address, 1 for change address. path is {{addressType}}/{{addressIndex}}
    #[serde(rename = "addressType", skip_serializing_if = "Option::is_none")]
    pub address_type: Option<i32>,
    /// Address index. Address path in the xpub is {{addressType}}/{{addressIndex}}
    #[serde(rename = "addressIndex", skip_serializing_if = "Option::is_none")]
    pub address_index: Option<i32>,
}

impl XpubAddress {
    /// Address detail in the wallet
    pub fn new() -> XpubAddress {
        XpubAddress {
            xpub: None,
            address: None,
            address_type: None,
            address_index: None,
        }
    }
}


