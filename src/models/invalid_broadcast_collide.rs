/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// InvalidBroadcastCollide : This field is only present in case of double spent transaction and contains transactions we collided with



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InvalidBroadcastCollide {
    /// The transaction id
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    /// Transaction size in bytes
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    /// Whole transaction in hex
    #[serde(rename = "hex", skip_serializing_if = "Option::is_none")]
    pub hex: Option<String>,
}

impl InvalidBroadcastCollide {
    /// This field is only present in case of double spent transaction and contains transactions we collided with
    pub fn new() -> InvalidBroadcastCollide {
        InvalidBroadcastCollide {
            txid: None,
            size: None,
            hex: None,
        }
    }
}


