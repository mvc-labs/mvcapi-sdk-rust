/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// AddressTx : Transaction history of the address.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AddressTx {
    /// Paging flag
    #[serde(rename = "flag", skip_serializing_if = "Option::is_none")]
    pub flag: Option<String>,
    /// The address of the record
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// timestamp of the tx
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    /// Block Height of the tx, -1 if not confirmed
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i64>,
    /// total income of the address from this tx
    #[serde(rename = "income", skip_serializing_if = "Option::is_none")]
    pub income: Option<i64>,
    /// total outcome of the address from this tx
    #[serde(rename = "outcome", skip_serializing_if = "Option::is_none")]
    pub outcome: Option<i64>,
    /// txid of this record
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
}

impl AddressTx {
    /// Transaction history of the address.
    pub fn new() -> AddressTx {
        AddressTx {
            flag: None,
            address: None,
            time: None,
            height: None,
            income: None,
            outcome: None,
            txid: None,
        }
    }
}


