/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * The version of the OpenAPI document: 3.0.11
 * Contact: heqiming@metasv.com
 * Generated by: https://openapi-generator.tech
 */

/// ContractNftGenesisSummary : Get summary(count group by address) for specific genesis.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContractNftGenesisSummary {
    /// Owner address.
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// SensibleId of the token
    #[serde(rename = "sensibleId", skip_serializing_if = "Option::is_none")]
    pub sensible_id: Option<String>,
    /// The metanet tx describing the nft.
    #[serde(rename = "metaTxid", skip_serializing_if = "Option::is_none")]
    pub meta_txid: Option<String>,
    /// Symbol of the token.
    #[serde(rename = "metaOutputIndex", skip_serializing_if = "Option::is_none")]
    pub meta_output_index: Option<i32>,
    /// The total supply of this NFT.
    #[serde(rename = "tokenSupply", skip_serializing_if = "Option::is_none")]
    pub token_supply: Option<i64>,
    /// The count of this nft that the address owns.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
}

impl ContractNftGenesisSummary {
    /// Get summary(count group by address) for specific genesis.
    pub fn new() -> ContractNftGenesisSummary {
        ContractNftGenesisSummary {
            address: None,
            sensible_id: None,
            meta_txid: None,
            meta_output_index: None,
            token_supply: None,
            count: None,
        }
    }
}


